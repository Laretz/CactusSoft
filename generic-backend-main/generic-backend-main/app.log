09/05/2024 19:03:14.314 [[32minfo[39m]: host name read successfully
09/05/2024 19:03:15.154 [[32minfo[39m]: host name read successfully
09/05/2024 19:03:15.383 [[32minfo[39m]: host name read successfully
09/05/2024 19:03:15.573 [[32minfo[39m]: host name read successfully
09/05/2024 19:03:15.743 [[32minfo[39m]: host name read successfully
09/05/2024 19:03:15.935 [[32minfo[39m]: host name read successfully
09/05/2024 19:03:16.124 [[32minfo[39m]: host name read successfully
09/05/2024 19:03:16.361 [[32minfo[39m]: host name read successfully
09/05/2024 19:04:00.815 [[32minfo[39m]: host name read successfully
09/05/2024 19:04:01.528 [[32minfo[39m]: host name read successfully
09/05/2024 19:05:47.922 [[32minfo[39m]: host name read successfully
09/05/2024 19:05:48.965 [[32minfo[39m]: host name read successfully
09/05/2024 19:05:49.805 [[32minfo[39m]: host name read successfully
09/05/2024 19:05:50.663 [[32minfo[39m]: host name read successfully
09/05/2024 19:06:29.401 [[32minfo[39m]: host name read successfully
09/05/2024 19:06:30.419 [[32minfo[39m]: host name read successfully
09/05/2024 19:06:31.727 [[32minfo[39m]: host name read successfully
09/05/2024 19:06:34.976 [[32minfo[39m]: host name read successfully
09/05/2024 19:06:36.285 [[32minfo[39m]: host name read successfully
09/05/2024 19:06:52.991 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:52.993 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:53.531 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:53.531 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:53.818 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:53.818 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:54.064 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:54.064 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:54.291 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:54.291 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:54.545 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:54.546 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:55.748 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:55.749 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:56.083 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:56.083 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:56.318 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:56.319 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:56.553 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:56.554 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:56.761 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:56.761 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:56.970 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:56.971 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:57.151 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:57.153 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:57.335 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:57.335 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:06:58.700 [[32minfo[39m]: successfully found clients
09/05/2024 19:06:58.701 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:07:53.418 [[32minfo[39m]: successfully found clients
09/05/2024 19:07:53.421 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:11:07.832 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:07.834 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:11:08.619 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:08.619 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:11:09.322 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:09.323 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:11:09.871 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:09.871 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:11:10.699 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:10.700 [[31merror[39m]: path: src/controllers/client/findByIdClientesController.js message: Do not know how to serialize a BigInt
09/05/2024 19:11:13.689 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:14.675 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:15.899 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:16.522 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:16.876 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:17.167 [[32minfo[39m]: successfully found clients
09/05/2024 19:11:17.413 [[32minfo[39m]: successfully found clients
09/05/2024 19:12:22.985 [[32minfo[39m]: successfully found clients
08/10/2024 14:30:49.181 [[32minfo[39m]: successfully found clients
10/10/2024 21:29:54.416 [[32minfo[39m]: successfully found clients
10/10/2024 22:01:11.968 [[32minfo[39m]: successfully found clients
10/10/2024 22:33:20.044 [[32minfo[39m]: successfully found clients
10/10/2024 23:16:43.239 [[32minfo[39m]: successfully found clients
10/10/2024 23:17:58.545 [[32minfo[39m]: successfully found clients
10/10/2024 23:18:25.968 [[32minfo[39m]: successfully found clients
10/10/2024 23:18:29.356 [[32minfo[39m]: successfully found clients
10/10/2024 23:18:30.982 [[32minfo[39m]: successfully found clients
10/10/2024 23:23:01.241 [[32minfo[39m]: successfully found clients
10/10/2024 23:27:04.346 [[32minfo[39m]: successfully found clients
10/10/2024 23:31:19.988 [[32minfo[39m]: successfully found clients
10/10/2024 23:31:23.331 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            Metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:33:39.199 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            Metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:34:03.139 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            Metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:34:04.276 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            Metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:34:47.029 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            Metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:36:59.056 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            Metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:37:02.995 [[32minfo[39m]: successfully found clients
10/10/2024 23:37:09.041 [[32minfo[39m]: successfully found clients
10/10/2024 23:37:14.416 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            Metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:37:54.157 [[32minfo[39m]: successfully found clients
10/10/2024 23:37:59.188 [[32minfo[39m]: successfully found clients
10/10/2024 23:38:03.263 [[32minfo[39m]: successfully found clients
10/10/2024 23:39:06.114 [[32minfo[39m]: successfully found clients
10/10/2024 23:39:09.950 [[32minfo[39m]: successfully found clients
10/10/2024 23:39:31.644 [[32minfo[39m]: successfully found clients
10/10/2024 23:50:17.189 [[32minfo[39m]: successfully found clients
10/10/2024 23:50:30.281 [[32minfo[39m]: successfully found clients
10/10/2024 23:50:34.920 [[31merror[39m]: 
Invalid `prisma.customers.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:45

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.customers.findMany({
          where: {
            metrics: {
            ~~~~~~~
              some: {
                latency: {
                  gt: 50
                }
              }
            },
        ?   AND?: CustomersWhereInput | CustomersWhereInput[],
        ?   OR?: CustomersWhereInput[],
        ?   NOT?: CustomersWhereInput | CustomersWhereInput[],
        ?   id?: StringFilter | String,
        ?   name?: StringFilter | String,
        ?   perfil?: IntFilter | Int,
        ?   Metrics?: MetricsListRelationFilter
          },
          include: {
            metrics: true
          }
        })

Unknown argument `metrics`. Did you mean `Metrics`? Available options are marked with ?.
10/10/2024 23:51:36.033 [[32minfo[39m]: successfully found clients
10/10/2024 23:53:33.199 [[32minfo[39m]: successfully found clients
10/10/2024 23:56:50.690 [[31merror[39m]: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:43

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.metrics.findMany({
          where: {
            latency: {
              gt: 50
            },
            include: {
            ~~~~~~~
              Customers: true
            },
        ?   AND?: MetricsWhereInput | MetricsWhereInput[],
        ?   OR?: MetricsWhereInput[],
        ?   NOT?: MetricsWhereInput | MetricsWhereInput[],
        ?   id?: StringFilter | String,
        ?   date?: DateTimeFilter | DateTime,
        ?   packetLoss?: IntNullableFilter | Int | Null,
        ?   ping?: BoolNullableFilter | Boolean | Null,
        ?   traffic?: FloatNullableFilter | Float | Null,
        ?   customerId?: StringFilter | String,
        ?   customer?: CustomersRelationFilter | CustomersWhereInput
          }
        })

Unknown argument `include`. Available options are marked with ?.
10/10/2024 23:57:54.190 [[31merror[39m]: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:43

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.metrics.findMany({
          where: {
            latency: {
              gt: 50
            }
          },
          include: {
            Customers: true,
            ~~~~~~~~~
        ?   customer?: true
          }
        })

Unknown field `Customers` for include statement on model `Metrics`. Available options are marked with ?.
10/10/2024 23:58:12.633 [[31merror[39m]: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:43

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.metrics.findMany({
          where: {
            latency: {
              gt: 50
            }
          },
          include: {
            customers: true,
            ~~~~~~~~~
        ?   customer?: true
          }
        })

Unknown field `customers` for include statement on model `Metrics`. Available options are marked with ?.
10/10/2024 23:58:59.455 [[31merror[39m]: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:43

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.metrics.findMany({
          where: {
            latency: {
              gt: 50
            }
          },
          include: {
            customers: true,
            ~~~~~~~~~
        ?   customer?: true
          }
        })

Unknown field `customers` for include statement on model `Metrics`. Available options are marked with ?.
10/10/2024 23:59:24.906 [[31merror[39m]: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:43

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.metrics.findMany({
          where: {
            latency: {
              gt: 50
            }
          },
          include: {
            customers: true,
            ~~~~~~~~~
        ?   customer?: true
          }
        })

Unknown field `customers` for include statement on model `Metrics`. Available options are marked with ?.
11/10/2024 00:01:36.151 [[31merror[39m]: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyMoreThan50.js:9:43

  6 async execute() {
  7   try {
  8     // Buscar clientes que tÃªm mÃ©tricas com latÃªncia maior que 50ms
â†’ 9     let clientes = await prisma.metrics.findMany({
          where: {
            latency: {
              gt: 50
            }
          },
          include: {
            customerid: true,
            ~~~~~~~~~~
        ?   customer?: true
          }
        })

Unknown field `customerid` for include statement on model `Metrics`. Available options are marked with ?.
11/10/2024 00:02:51.878 [[32minfo[39m]: successfully found clients
11/10/2024 00:12:07.434 [[32minfo[39m]: successfully found clients
11/10/2024 03:43:15.950 [[32minfo[39m]: successfully found clients
11/10/2024 03:43:18.412 [[32minfo[39m]: successfully found clients
11/10/2024 03:53:16.675 [[32minfo[39m]: successfully found clients
11/10/2024 03:53:19.236 [[32minfo[39m]: successfully found clients
11/10/2024 03:53:23.024 [[31merror[39m]: path: src/controllers/client/packetLossRate.js message: packetLossRate is not defined
11/10/2024 03:53:28.619 [[31merror[39m]: path: src/controllers/client/packetLossRate.js message: packetLossRate is not defined
11/10/2024 03:59:14.724 [[31merror[39m]: path: src/controllers/client/packetLossRate.js message: packetLossRate is not defined
11/10/2024 03:59:21.871 [[32minfo[39m]: successfully found clients
11/10/2024 04:00:05.094 [[32minfo[39m]: successfully found clients
11/10/2024 04:00:13.238 [[32minfo[39m]: successfully found clients
11/10/2024 04:09:36.267 [[32minfo[39m]: successfully found clients
11/10/2024 04:09:58.296 [[32minfo[39m]: successfully found clients
11/10/2024 04:16:22.053 [[32minfo[39m]: successfully found clients
11/10/2024 04:16:28.691 [[31merror[39m]: path: src/models/packetLossRate.js message: 
Invalid `prisma.metrics.findFirst()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\packetLossRate.js:8:45

  5 module.exports = {
  6     async execute() {
  7       try {
â†’ 8         let clientes = await prisma.metrics.findFirst({
              orderBy: {
                packetLoss: "desc"
              },
              where: {
                packetLoss: {
                  not: null
                }
              },
              include: {
                customer: true
              },
              tale: 3,
              ~~~~
            ? cursor?: MetricsWhereUniqueInput,
            ? take?: Int,
            ? skip?: Int,
            ? distinct?: MetricsScalarFieldEnum | MetricsScalarFieldEnum[]
            })

Unknown argument `tale`. Did you mean `take`? Available options are marked with ?.
11/10/2024 04:17:11.583 [[31merror[39m]: path: src/models/packetLossRate.js message: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\packetLossRate.js:8:45

  5 module.exports = {
  6     async execute() {
  7       try {
â†’ 8         let clientes = await prisma.metrics.findMany({
              orderBy: {
                packetLoss: "desc"
              },
              where: {
                packetLoss: {
                  not: null
                }
              },
              include: {
                customer: true
              },
              tale: 3,
              ~~~~
            ? cursor?: MetricsWhereUniqueInput,
            ? take?: Int,
            ? skip?: Int,
            ? distinct?: MetricsScalarFieldEnum | MetricsScalarFieldEnum[]
            })

Unknown argument `tale`. Did you mean `take`? Available options are marked with ?.
11/10/2024 04:17:13.076 [[31merror[39m]: path: src/models/packetLossRate.js message: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\packetLossRate.js:8:45

  5 module.exports = {
  6     async execute() {
  7       try {
â†’ 8         let clientes = await prisma.metrics.findMany({
              orderBy: {
                packetLoss: "desc"
              },
              where: {
                packetLoss: {
                  not: null
                }
              },
              include: {
                customer: true
              },
              tale: 3,
              ~~~~
            ? cursor?: MetricsWhereUniqueInput,
            ? take?: Int,
            ? skip?: Int,
            ? distinct?: MetricsScalarFieldEnum | MetricsScalarFieldEnum[]
            })

Unknown argument `tale`. Did you mean `take`? Available options are marked with ?.
11/10/2024 04:17:29.893 [[31merror[39m]: path: src/models/packetLossRate.js message: 
Invalid `prisma.metrics.findMany()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\packetLossRate.js:8:45

  5 module.exports = {
  6     async execute() {
  7       try {
â†’ 8         let clientes = await prisma.metrics.findMany({
              orderBy: {
                packetLoss: "desc"
              },
              where: {
                packetLoss: {
                  not: null
                }
              },
              include: {
                customer: true
              },
              tale: 3,
              ~~~~
            ? cursor?: MetricsWhereUniqueInput,
            ? take?: Int,
            ? skip?: Int,
            ? distinct?: MetricsScalarFieldEnum | MetricsScalarFieldEnum[]
            })

Unknown argument `tale`. Did you mean `take`? Available options are marked with ?.
11/10/2024 04:17:43.615 [[32minfo[39m]: successfully found clients
11/10/2024 09:18:27.360 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 09:32:06.072 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 09:32:13.186 [[32minfo[39m]: successfully found clients
11/10/2024 09:33:39.529 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 10:06:51.619 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 17:00:26.122 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 17:10:55.000 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 17:14:02.702 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 17:15:46.074 [[31merror[39m]: path: src/models/latencyImproviment.js message: customerId is not defined
11/10/2024 18:43:26.588 [[32minfo[39m]: successfully found clients
11/10/2024 18:45:08.261 [[32minfo[39m]: successfully found clients
11/10/2024 18:48:25.355 [[32minfo[39m]: successfully found clients
11/10/2024 19:23:45.959 [[32minfo[39m]: successfully found clients
11/10/2024 19:40:40.491 [[32minfo[39m]: successfully found clients
11/10/2024 19:52:45.151 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:14:43

  11 const minutesInSevenDays = 7 * 24 * 60; // 7 dias convertidos para minutos
  12 
  13 // Agrupar mÃ©tricas por cliente
â†’ 14 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T22:52:45.042Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:53:43.227 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        id: true
      }
    },
    _sum: {
      select: {
        ping: true
      }
    },
    clienteId: true
  },
  by: [
    "clienteId"
  ],
  ~~~~~~~~~~~~~
  where: {
    date: {
      gte: new Date("2024-10-04T22:53:43.143Z")
    }
  }
}

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:53:49.574 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const monthDaysAgo = new Date();
   9 monthDaysAgo.setDate(monthDaysAgo.getDate() - 30);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-09-11T22:53:49.382Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:54:06.483 [[31merror[39m]: path: src/models/disponibilidade.js message: sevenDaysAgo is not defined
11/10/2024 19:54:26.778 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const monthDaysAgo = new Date();
   9 monthDaysAgo.setDate(monthDaysAgo.getDate() - 30);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-09-11T22:54:26.668Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:54:29.543 [[32minfo[39m]: successfully found clients
11/10/2024 19:54:32.393 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const monthDaysAgo = new Date();
   9 monthDaysAgo.setDate(monthDaysAgo.getDate() - 30);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-09-11T22:54:32.301Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:54:56.347 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T22:54:56.125Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:54:57.662 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T22:54:57.567Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:56:19.802 [[32minfo[39m]: successfully found clients
11/10/2024 19:56:22.094 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T22:56:22.008Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:57:25.559 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T22:57:25.441Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:57:45.778 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T22:57:45.671Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:58:51.770 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T22:58:51.556Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 19:59:24.416 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true,
             ~~~~
     ?       latency?: true,
     ?       packetLoss?: true,
     ?       traffic?: true
           }
         },
         customerId: true
       },
       by: [
         "customerId"
       ],
       where: {
         date: {
           gte: new Date("2024-10-04T22:59:24.308Z")
         }
       }
     })

Unknown field `ping` for select statement on model `MetricsSumAggregateOutputType`. Available options are marked with ?.
11/10/2024 20:00:44.695 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true,
             ~~~~
     ?       latency?: true,
     ?       packetLoss?: true,
     ?       traffic?: true
           }
         },
         customerId: true
       },
       by: [
         "customerId"
       ],
       where: {
         date: {
           gte: new Date("2024-10-04T23:00:44.595Z")
         }
       }
     })

Unknown field `ping` for select statement on model `MetricsSumAggregateOutputType`. Available options are marked with ?.
11/10/2024 20:01:40.955 [[32minfo[39m]: successfully found clients
11/10/2024 20:01:45.282 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true,
             ~~~~
     ?       latency?: true,
     ?       packetLoss?: true,
     ?       traffic?: true
           }
         },
         customerId: true
       },
       by: [
         "customerId"
       ],
       where: {
         date: {
           gte: new Date("2024-10-04T23:01:45.179Z")
         }
       }
     })

Unknown field `ping` for select statement on model `MetricsSumAggregateOutputType`. Available options are marked with ?.
11/10/2024 20:03:15.573 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T23:03:15.464Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 20:03:18.009 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T23:03:17.926Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 20:03:19.542 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true
           }
         },
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-04T23:03:19.432Z")
         }
       }
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
11/10/2024 20:04:19.873 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true,
             ~~~~
     ?       latency?: true,
     ?       packetLoss?: true,
     ?       traffic?: true
           }
         },
         customerId: true
       },
       by: [
         "customerId"
       ],
       where: {
         date: {
           gte: new Date("2024-10-04T23:04:19.773Z")
         }
       }
     })

Unknown field `ping` for select statement on model `MetricsSumAggregateOutputType`. Available options are marked with ?.
11/10/2024 20:05:12.646 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true,
             ~~~~
     ?       latency?: true,
     ?       packetLoss?: true,
     ?       traffic?: true
           }
         },
         customerId: true
       },
       by: [
         "customerId"
       ],
       where: {
         date: {
           gte: new Date("2024-10-04T23:05:12.449Z")
         }
       }
     })

Unknown field `ping` for select statement on model `MetricsSumAggregateOutputType`. Available options are marked with ?.
11/10/2024 20:06:17.364 [[31merror[39m]: path: src/models/disponibilidade.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:12:43

   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
  11 // Contar o total de pings e o total de pings conectados (ping: true)
â†’ 12 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             ping: {
               where: {
               ~~~~~
                 ping: true
               }
             }
           }
         },
         customerId: true
       },
       by: [
         "customerId"
       ],
       where: {
         date: {
           gte: new Date("2024-10-04T23:06:17.265Z")
         }
       }
     })

Unknown argument `where`.
11/10/2024 20:12:55.806 [[31merror[39m]: path: src/models/findDisponibility.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\findDisponibility.js:11:43

   8 const sevenDaysAgo = new Date();
   9 sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
  10 
â†’ 11 let clientes = await prisma.metrics.groupBy({
       select: {
         _count: {
           select: {
             id: true
           }
         },
         _sum: {
           select: {
             ping: true,
             ~~~~
     ?       latency?: true,
     ?       packetLoss?: true,
     ?       traffic?: true
           }
         },
         customerId: true
       },
       by: [
         "customerId"
       ],
       where: {
         date: {
           gte: new Date("2024-10-04T23:12:55.700Z")
         }
       }
     })

Unknown field `ping` for select statement on model `MetricsSumAggregateOutputType`. Available options are marked with ?.
11/10/2024 20:14:24.148 [[32minfo[39m]: successfully found clients
11/10/2024 20:16:12.382 [[32minfo[39m]: successfully found clients
11/10/2024 20:16:38.773 [[32minfo[39m]: successfully found clients
11/10/2024 20:16:41.380 [[32minfo[39m]: successfully found clients
11/10/2024 20:17:17.413 [[32minfo[39m]: successfully found clients
11/10/2024 20:18:20.088 [[32minfo[39m]: successfully found clients
11/10/2024 20:18:27.733 [[32minfo[39m]: successfully found clients
11/10/2024 20:19:05.218 [[32minfo[39m]: successfully found clients
11/10/2024 20:20:14.328 [[32minfo[39m]: successfully found clients
11/10/2024 20:20:37.055 [[32minfo[39m]: successfully found clients
11/10/2024 20:29:18.025 [[32minfo[39m]: successfully found client with the most improvement in latency
11/10/2024 23:30:30.490 [[32minfo[39m]: successfully found clients
11/10/2024 23:32:54.583 [[32minfo[39m]: successfully found clients
14/10/2024 00:04:05.436 [[32minfo[39m]: successfully found clients
14/10/2024 00:04:23.170 [[32minfo[39m]: successfully found clients
14/10/2024 00:04:41.500 [[32minfo[39m]: successfully found clients
14/10/2024 00:05:28.927 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 15:57:12.676 [[31merror[39m]: path: src/models/latencyImproviment.js message: Cannot read properties of undefined (reading 'kind')
14/10/2024 15:57:28.769 [[31merror[39m]: path: src/models/latencyImproviment.js message: Cannot read properties of undefined (reading 'kind')
14/10/2024 15:57:53.140 [[32minfo[39m]: successfully found clients
14/10/2024 15:57:55.458 [[31merror[39m]: path: src/models/latencyImproviment.js message: Cannot read properties of undefined (reading 'kind')
14/10/2024 15:58:24.844 [[31merror[39m]: path: src/models/latencyImproviment.js message: Cannot read properties of undefined (reading 'kind')
14/10/2024 15:58:30.332 [[32minfo[39m]: successfully found clients
14/10/2024 15:58:33.621 [[32minfo[39m]: successfully found clients
14/10/2024 15:58:58.419 [[31merror[39m]: path: src/models/latencyImproviment.js message: Cannot read properties of undefined (reading 'kind')
14/10/2024 16:00:03.634 [[31merror[39m]: path: src/models/latencyImproviment.js message: Cannot read properties of undefined (reading 'kind')
14/10/2024 16:02:23.279 [[31merror[39m]: path: src/models/latencyImproviment.js message: 
Invalid `prisma.metrics.groupBy()` invocation in
C:\Users\renat\Dev\CactusSoft\generic-backend-main\generic-backend-main\src\models\latencyImproviment.js:15:43

  12 // agrupei as metricas por ID de cliente e ao usar o _avg, o prisma calcula a media da latencia de cada grupo
  13 //  utilizei  "gte" para trazer valores maiores ou iguais a 7 dias para trazer somentes as metricas mais recentes
  14 // como a ideia Ã© comparar metricas, tambÃ©m coloquei para nao trazer latencia nula, e apos ordenar de maior pra menor, eu uso o take 1, para trazer o primeiro
â†’ 15 let clientes = await prisma.metrics.groupBy({
       select: {
         clienteId: true
       },
       by: [
         "clienteId"
       ],
       ~~~~~~~~~~~~~
       where: {
         date: {
           gte: new Date("2024-10-07T19:02:23.170Z")
         },
         latency: {
           not: null
         }
       },
       orderBy: {
         _avg: {
           latency: "asc"
         }
       },
       take: 1
     })

Invalid value for argument `by`. Expected MetricsScalarFieldEnum.
14/10/2024 16:04:41.341 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 16:05:26.080 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 16:10:12.118 [[31merror[39m]: path: src/models/latencyImproviment.js message: grupo is not defined
14/10/2024 16:14:47.023 [[31merror[39m]: path: src/models/latencyImproviment.js message: grupo is not defined
14/10/2024 16:16:51.640 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 16:34:03.339 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 16:37:58.894 [[32minfo[39m]: successfully found clients
14/10/2024 16:38:38.739 [[32minfo[39m]: successfully found clients
14/10/2024 16:41:58.020 [[32minfo[39m]: successfully found clients
14/10/2024 16:42:06.097 [[32minfo[39m]: successfully found clients
14/10/2024 16:46:57.171 [[32minfo[39m]: successfully found clients
14/10/2024 17:20:08.060 [[32minfo[39m]: successfully found clients
14/10/2024 17:20:41.114 [[32minfo[39m]: successfully found clients
14/10/2024 17:22:04.779 [[32minfo[39m]: successfully found clients
14/10/2024 17:23:02.518 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 17:25:29.560 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 17:36:52.834 [[32minfo[39m]: successfully found clients
14/10/2024 17:46:41.177 [[31merror[39m]: path: src/controllers/client/packetLossRate.js message: prisma is not defined
14/10/2024 17:46:50.438 [[31merror[39m]: path: src/controllers/client/packetLossRate.js message: prisma is not defined
14/10/2024 17:47:07.177 [[32minfo[39m]: successfully found clients
14/10/2024 17:55:21.597 [[32minfo[39m]: successfully found clients
14/10/2024 18:02:03.141 [[32minfo[39m]: successfully found clients
14/10/2024 18:06:17.362 [[32minfo[39m]: successfully found clients
14/10/2024 18:23:15.375 [[32minfo[39m]: successfully found clients
14/10/2024 18:54:46.105 [[32minfo[39m]: successfully found clients
14/10/2024 19:22:35.690 [[31merror[39m]: path: src/models/latencyImprovement.js message: Cannot access 'clientes' before initialization
14/10/2024 19:23:16.632 [[32minfo[39m]: successfully found clients
14/10/2024 19:23:59.401 [[32minfo[39m]: successfully found clients
14/10/2024 19:26:14.105 [[32minfo[39m]: successfully found clients
14/10/2024 19:40:47.172 [[32minfo[39m]: successfully found clients
14/10/2024 19:43:12.961 [[32minfo[39m]: successfully found clients
14/10/2024 19:44:49.124 [[32minfo[39m]: successfully found clients
14/10/2024 19:47:27.723 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 19:48:59.410 [[32minfo[39m]: successfully found clients
14/10/2024 19:49:56.515 [[32minfo[39m]: successfully found clients
14/10/2024 19:50:33.829 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 19:54:03.560 [[32minfo[39m]: successfully found clients
14/10/2024 19:58:46.137 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:02:10.552 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:02:22.078 [[32minfo[39m]: successfully found clients
14/10/2024 20:03:03.248 [[32minfo[39m]: successfully found clients
14/10/2024 20:03:07.776 [[31merror[39m]: path: src/models/latencyAvarageClientes.js message: grupo is not defined
14/10/2024 20:03:43.337 [[31merror[39m]: path: src/models/latencyAvarageClientes.js message: grupo is not defined
14/10/2024 20:04:12.420 [[31merror[39m]: path: src/models/latencyAvarageClientes.js message: grupo is not defined
14/10/2024 20:04:17.477 [[32minfo[39m]: successfully found clients
14/10/2024 20:04:55.219 [[32minfo[39m]: successfully found clients
14/10/2024 20:08:49.783 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:11:13.844 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:13:50.488 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:14:20.103 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:14:38.343 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:15:10.188 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:15:27.997 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:19:29.944 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:26:08.762 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:26:53.703 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:26:56.133 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:27:11.442 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:27:31.530 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:29:02.466 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:29:11.442 [[32minfo[39m]: successfully found clients
14/10/2024 20:31:58.218 [[32minfo[39m]: successfully found clients
14/10/2024 20:32:05.247 [[32minfo[39m]: successfully found clients
14/10/2024 20:33:28.921 [[32minfo[39m]: successfully found clients
14/10/2024 20:35:07.234 [[32minfo[39m]: successfully found clients
14/10/2024 20:44:59.042 [[32minfo[39m]: successfully found clients
14/10/2024 20:45:11.969 [[32minfo[39m]: successfully found clients
14/10/2024 20:45:18.241 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:46:34.387 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:46:39.710 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:46:46.160 [[32minfo[39m]: successfully found clients
14/10/2024 20:47:55.002 [[32minfo[39m]: successfully found clients
14/10/2024 20:47:57.999 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:48:17.569 [[32minfo[39m]: successfully found clients
14/10/2024 20:48:24.629 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:48:47.305 [[32minfo[39m]: successfully found clients
14/10/2024 20:48:58.935 [[32minfo[39m]: successfully found clients
14/10/2024 20:49:04.419 [[32minfo[39m]: successfully found client with the most improvement in latency
14/10/2024 20:50:57.504 [[32minfo[39m]: successfully found clients
14/10/2024 20:52:30.641 [[32minfo[39m]: successfully found clients
14/10/2024 20:54:43.668 [[32minfo[39m]: successfully found clients
14/10/2024 21:50:06.672 [[32minfo[39m]: successfully found clients
14/10/2024 21:50:10.190 [[32minfo[39m]: successfully found clients
14/10/2024 21:50:28.415 [[32minfo[39m]: successfully found clients
14/10/2024 22:34:01.002 [[32minfo[39m]: successfully found clients
